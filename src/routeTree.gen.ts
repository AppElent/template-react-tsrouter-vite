/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as EmptyRouteImport } from './routes/_empty/route'
import { Route as RouteImport } from './routes/route'
import { Route as EmptyTermsImport } from './routes/_empty/terms'
import { Route as EmptyPrivacyImport } from './routes/_empty/privacy'
import { Route as AppDefaultProfileImport } from './routes/app/_default/profile'
import { Route as AppDefaultAboutImport } from './routes/app/_default/about'
import { Route as AppDefaultTestsRouteImport } from './routes/app/_default/tests/route'
import { Route as AppDefaultTestRouteImport } from './routes/app/_default/test/route'
import { Route as AppDefaultTestsIndexImport } from './routes/app/_default/tests/index'
import { Route as AppDefaultTestsLibsImport } from './routes/app/_default/tests/libs'
import { Route as AppDefaultTestsFormsImport } from './routes/app/_default/tests/forms'
import { Route as AppDefaultTestsDatasourcesImport } from './routes/app/_default/tests/datasources'
import { Route as AppDefaultTestAboutImport } from './routes/app/_default/test/about'
import { Route as AppDefaultAuthSignUpImport } from './routes/app/_default/_auth/sign-up'
import { Route as AppDefaultAuthSignInImport } from './routes/app/_default/_auth/sign-in'
import { Route as AppDefaultAuthSignInSsoCallbackImport } from './routes/app/_default/_auth/sign-in.sso-callback'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const EmptyRouteRoute = EmptyRouteImport.update({
  id: '/_empty',
  getParentRoute: () => rootRoute,
} as any)

const RouteRoute = RouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EmptyTermsRoute = EmptyTermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => EmptyRouteRoute,
} as any)

const EmptyPrivacyRoute = EmptyPrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => EmptyRouteRoute,
} as any)

const AppDefaultProfileRoute = AppDefaultProfileImport.update({
  id: '/_default/profile',
  path: '/profile',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDefaultAboutRoute = AppDefaultAboutImport.update({
  id: '/_default/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDefaultTestsRouteRoute = AppDefaultTestsRouteImport.update({
  id: '/_default/tests',
  path: '/tests',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDefaultTestRouteRoute = AppDefaultTestRouteImport.update({
  id: '/_default/test',
  path: '/test',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDefaultTestsIndexRoute = AppDefaultTestsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDefaultTestsRouteRoute,
} as any)

const AppDefaultTestsLibsRoute = AppDefaultTestsLibsImport.update({
  id: '/libs',
  path: '/libs',
  getParentRoute: () => AppDefaultTestsRouteRoute,
} as any)

const AppDefaultTestsFormsRoute = AppDefaultTestsFormsImport.update({
  id: '/forms',
  path: '/forms',
  getParentRoute: () => AppDefaultTestsRouteRoute,
} as any)

const AppDefaultTestsDatasourcesRoute = AppDefaultTestsDatasourcesImport.update(
  {
    id: '/datasources',
    path: '/datasources',
    getParentRoute: () => AppDefaultTestsRouteRoute,
  } as any,
)

const AppDefaultTestAboutRoute = AppDefaultTestAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppDefaultTestRouteRoute,
} as any)

const AppDefaultAuthSignUpRoute = AppDefaultAuthSignUpImport.update({
  id: '/_default/_auth/sign-up',
  path: '/sign-up',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDefaultAuthSignInRoute = AppDefaultAuthSignInImport.update({
  id: '/_default/_auth/sign-in',
  path: '/sign-in',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDefaultAuthSignInSsoCallbackRoute =
  AppDefaultAuthSignInSsoCallbackImport.update({
    id: '/sso-callback',
    path: '/sso-callback',
    getParentRoute: () => AppDefaultAuthSignInRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RouteImport
      parentRoute: typeof rootRoute
    }
    '/_empty': {
      id: '/_empty'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof EmptyRouteImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_empty/privacy': {
      id: '/_empty/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof EmptyPrivacyImport
      parentRoute: typeof EmptyRouteImport
    }
    '/_empty/terms': {
      id: '/_empty/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof EmptyTermsImport
      parentRoute: typeof EmptyRouteImport
    }
    '/app/_default/test': {
      id: '/app/_default/test'
      path: '/test'
      fullPath: '/app/test'
      preLoaderRoute: typeof AppDefaultTestRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/_default/tests': {
      id: '/app/_default/tests'
      path: '/tests'
      fullPath: '/app/tests'
      preLoaderRoute: typeof AppDefaultTestsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/app/_default/about': {
      id: '/app/_default/about'
      path: '/about'
      fullPath: '/app/about'
      preLoaderRoute: typeof AppDefaultAboutImport
      parentRoute: typeof AppRouteImport
    }
    '/app/_default/profile': {
      id: '/app/_default/profile'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppDefaultProfileImport
      parentRoute: typeof AppRouteImport
    }
    '/app/_default/_auth/sign-in': {
      id: '/app/_default/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/app/sign-in'
      preLoaderRoute: typeof AppDefaultAuthSignInImport
      parentRoute: typeof AppRouteImport
    }
    '/app/_default/_auth/sign-up': {
      id: '/app/_default/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/app/sign-up'
      preLoaderRoute: typeof AppDefaultAuthSignUpImport
      parentRoute: typeof AppRouteImport
    }
    '/app/_default/test/about': {
      id: '/app/_default/test/about'
      path: '/about'
      fullPath: '/app/test/about'
      preLoaderRoute: typeof AppDefaultTestAboutImport
      parentRoute: typeof AppDefaultTestRouteImport
    }
    '/app/_default/tests/datasources': {
      id: '/app/_default/tests/datasources'
      path: '/datasources'
      fullPath: '/app/tests/datasources'
      preLoaderRoute: typeof AppDefaultTestsDatasourcesImport
      parentRoute: typeof AppDefaultTestsRouteImport
    }
    '/app/_default/tests/forms': {
      id: '/app/_default/tests/forms'
      path: '/forms'
      fullPath: '/app/tests/forms'
      preLoaderRoute: typeof AppDefaultTestsFormsImport
      parentRoute: typeof AppDefaultTestsRouteImport
    }
    '/app/_default/tests/libs': {
      id: '/app/_default/tests/libs'
      path: '/libs'
      fullPath: '/app/tests/libs'
      preLoaderRoute: typeof AppDefaultTestsLibsImport
      parentRoute: typeof AppDefaultTestsRouteImport
    }
    '/app/_default/tests/': {
      id: '/app/_default/tests/'
      path: '/'
      fullPath: '/app/tests/'
      preLoaderRoute: typeof AppDefaultTestsIndexImport
      parentRoute: typeof AppDefaultTestsRouteImport
    }
    '/app/_default/_auth/sign-in/sso-callback': {
      id: '/app/_default/_auth/sign-in/sso-callback'
      path: '/sso-callback'
      fullPath: '/app/sign-in/sso-callback'
      preLoaderRoute: typeof AppDefaultAuthSignInSsoCallbackImport
      parentRoute: typeof AppDefaultAuthSignInImport
    }
  }
}

// Create and export the route tree

interface EmptyRouteRouteChildren {
  EmptyPrivacyRoute: typeof EmptyPrivacyRoute
  EmptyTermsRoute: typeof EmptyTermsRoute
}

const EmptyRouteRouteChildren: EmptyRouteRouteChildren = {
  EmptyPrivacyRoute: EmptyPrivacyRoute,
  EmptyTermsRoute: EmptyTermsRoute,
}

const EmptyRouteRouteWithChildren = EmptyRouteRoute._addFileChildren(
  EmptyRouteRouteChildren,
)

interface AppDefaultTestRouteRouteChildren {
  AppDefaultTestAboutRoute: typeof AppDefaultTestAboutRoute
}

const AppDefaultTestRouteRouteChildren: AppDefaultTestRouteRouteChildren = {
  AppDefaultTestAboutRoute: AppDefaultTestAboutRoute,
}

const AppDefaultTestRouteRouteWithChildren =
  AppDefaultTestRouteRoute._addFileChildren(AppDefaultTestRouteRouteChildren)

interface AppDefaultTestsRouteRouteChildren {
  AppDefaultTestsDatasourcesRoute: typeof AppDefaultTestsDatasourcesRoute
  AppDefaultTestsFormsRoute: typeof AppDefaultTestsFormsRoute
  AppDefaultTestsLibsRoute: typeof AppDefaultTestsLibsRoute
  AppDefaultTestsIndexRoute: typeof AppDefaultTestsIndexRoute
}

const AppDefaultTestsRouteRouteChildren: AppDefaultTestsRouteRouteChildren = {
  AppDefaultTestsDatasourcesRoute: AppDefaultTestsDatasourcesRoute,
  AppDefaultTestsFormsRoute: AppDefaultTestsFormsRoute,
  AppDefaultTestsLibsRoute: AppDefaultTestsLibsRoute,
  AppDefaultTestsIndexRoute: AppDefaultTestsIndexRoute,
}

const AppDefaultTestsRouteRouteWithChildren =
  AppDefaultTestsRouteRoute._addFileChildren(AppDefaultTestsRouteRouteChildren)

interface AppDefaultAuthSignInRouteChildren {
  AppDefaultAuthSignInSsoCallbackRoute: typeof AppDefaultAuthSignInSsoCallbackRoute
}

const AppDefaultAuthSignInRouteChildren: AppDefaultAuthSignInRouteChildren = {
  AppDefaultAuthSignInSsoCallbackRoute: AppDefaultAuthSignInSsoCallbackRoute,
}

const AppDefaultAuthSignInRouteWithChildren =
  AppDefaultAuthSignInRoute._addFileChildren(AppDefaultAuthSignInRouteChildren)

interface AppRouteRouteChildren {
  AppDefaultTestRouteRoute: typeof AppDefaultTestRouteRouteWithChildren
  AppDefaultTestsRouteRoute: typeof AppDefaultTestsRouteRouteWithChildren
  AppDefaultAboutRoute: typeof AppDefaultAboutRoute
  AppDefaultProfileRoute: typeof AppDefaultProfileRoute
  AppDefaultAuthSignInRoute: typeof AppDefaultAuthSignInRouteWithChildren
  AppDefaultAuthSignUpRoute: typeof AppDefaultAuthSignUpRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppDefaultTestRouteRoute: AppDefaultTestRouteRouteWithChildren,
  AppDefaultTestsRouteRoute: AppDefaultTestsRouteRouteWithChildren,
  AppDefaultAboutRoute: AppDefaultAboutRoute,
  AppDefaultProfileRoute: AppDefaultProfileRoute,
  AppDefaultAuthSignInRoute: AppDefaultAuthSignInRouteWithChildren,
  AppDefaultAuthSignUpRoute: AppDefaultAuthSignUpRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof RouteRoute
  '': typeof EmptyRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/privacy': typeof EmptyPrivacyRoute
  '/terms': typeof EmptyTermsRoute
  '/app/test': typeof AppDefaultTestRouteRouteWithChildren
  '/app/tests': typeof AppDefaultTestsRouteRouteWithChildren
  '/app/about': typeof AppDefaultAboutRoute
  '/app/profile': typeof AppDefaultProfileRoute
  '/app/sign-in': typeof AppDefaultAuthSignInRouteWithChildren
  '/app/sign-up': typeof AppDefaultAuthSignUpRoute
  '/app/test/about': typeof AppDefaultTestAboutRoute
  '/app/tests/datasources': typeof AppDefaultTestsDatasourcesRoute
  '/app/tests/forms': typeof AppDefaultTestsFormsRoute
  '/app/tests/libs': typeof AppDefaultTestsLibsRoute
  '/app/tests/': typeof AppDefaultTestsIndexRoute
  '/app/sign-in/sso-callback': typeof AppDefaultAuthSignInSsoCallbackRoute
}

export interface FileRoutesByTo {
  '/': typeof RouteRoute
  '': typeof EmptyRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/privacy': typeof EmptyPrivacyRoute
  '/terms': typeof EmptyTermsRoute
  '/app/test': typeof AppDefaultTestRouteRouteWithChildren
  '/app/about': typeof AppDefaultAboutRoute
  '/app/profile': typeof AppDefaultProfileRoute
  '/app/sign-in': typeof AppDefaultAuthSignInRouteWithChildren
  '/app/sign-up': typeof AppDefaultAuthSignUpRoute
  '/app/test/about': typeof AppDefaultTestAboutRoute
  '/app/tests/datasources': typeof AppDefaultTestsDatasourcesRoute
  '/app/tests/forms': typeof AppDefaultTestsFormsRoute
  '/app/tests/libs': typeof AppDefaultTestsLibsRoute
  '/app/tests': typeof AppDefaultTestsIndexRoute
  '/app/sign-in/sso-callback': typeof AppDefaultAuthSignInSsoCallbackRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof RouteRoute
  '/_empty': typeof EmptyRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/_empty/privacy': typeof EmptyPrivacyRoute
  '/_empty/terms': typeof EmptyTermsRoute
  '/app/_default/test': typeof AppDefaultTestRouteRouteWithChildren
  '/app/_default/tests': typeof AppDefaultTestsRouteRouteWithChildren
  '/app/_default/about': typeof AppDefaultAboutRoute
  '/app/_default/profile': typeof AppDefaultProfileRoute
  '/app/_default/_auth/sign-in': typeof AppDefaultAuthSignInRouteWithChildren
  '/app/_default/_auth/sign-up': typeof AppDefaultAuthSignUpRoute
  '/app/_default/test/about': typeof AppDefaultTestAboutRoute
  '/app/_default/tests/datasources': typeof AppDefaultTestsDatasourcesRoute
  '/app/_default/tests/forms': typeof AppDefaultTestsFormsRoute
  '/app/_default/tests/libs': typeof AppDefaultTestsLibsRoute
  '/app/_default/tests/': typeof AppDefaultTestsIndexRoute
  '/app/_default/_auth/sign-in/sso-callback': typeof AppDefaultAuthSignInSsoCallbackRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/app'
    | '/privacy'
    | '/terms'
    | '/app/test'
    | '/app/tests'
    | '/app/about'
    | '/app/profile'
    | '/app/sign-in'
    | '/app/sign-up'
    | '/app/test/about'
    | '/app/tests/datasources'
    | '/app/tests/forms'
    | '/app/tests/libs'
    | '/app/tests/'
    | '/app/sign-in/sso-callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/app'
    | '/privacy'
    | '/terms'
    | '/app/test'
    | '/app/about'
    | '/app/profile'
    | '/app/sign-in'
    | '/app/sign-up'
    | '/app/test/about'
    | '/app/tests/datasources'
    | '/app/tests/forms'
    | '/app/tests/libs'
    | '/app/tests'
    | '/app/sign-in/sso-callback'
  id:
    | '__root__'
    | '/'
    | '/_empty'
    | '/app'
    | '/_empty/privacy'
    | '/_empty/terms'
    | '/app/_default/test'
    | '/app/_default/tests'
    | '/app/_default/about'
    | '/app/_default/profile'
    | '/app/_default/_auth/sign-in'
    | '/app/_default/_auth/sign-up'
    | '/app/_default/test/about'
    | '/app/_default/tests/datasources'
    | '/app/_default/tests/forms'
    | '/app/_default/tests/libs'
    | '/app/_default/tests/'
    | '/app/_default/_auth/sign-in/sso-callback'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  RouteRoute: typeof RouteRoute
  EmptyRouteRoute: typeof EmptyRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  RouteRoute: RouteRoute,
  EmptyRouteRoute: EmptyRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_empty",
        "/app"
      ]
    },
    "/": {
      "filePath": "route.tsx"
    },
    "/_empty": {
      "filePath": "_empty/route.tsx",
      "children": [
        "/_empty/privacy",
        "/_empty/terms"
      ]
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/_default/test",
        "/app/_default/tests",
        "/app/_default/about",
        "/app/_default/profile",
        "/app/_default/_auth/sign-in",
        "/app/_default/_auth/sign-up"
      ]
    },
    "/_empty/privacy": {
      "filePath": "_empty/privacy.tsx",
      "parent": "/_empty"
    },
    "/_empty/terms": {
      "filePath": "_empty/terms.tsx",
      "parent": "/_empty"
    },
    "/app/_default/test": {
      "filePath": "app/_default/test/route.tsx",
      "parent": "/app",
      "children": [
        "/app/_default/test/about"
      ]
    },
    "/app/_default/tests": {
      "filePath": "app/_default/tests/route.tsx",
      "parent": "/app",
      "children": [
        "/app/_default/tests/datasources",
        "/app/_default/tests/forms",
        "/app/_default/tests/libs",
        "/app/_default/tests/"
      ]
    },
    "/app/_default/about": {
      "filePath": "app/_default/about.tsx",
      "parent": "/app"
    },
    "/app/_default/profile": {
      "filePath": "app/_default/profile.tsx",
      "parent": "/app"
    },
    "/app/_default/_auth/sign-in": {
      "filePath": "app/_default/_auth/sign-in.tsx",
      "parent": "/app",
      "children": [
        "/app/_default/_auth/sign-in/sso-callback"
      ]
    },
    "/app/_default/_auth/sign-up": {
      "filePath": "app/_default/_auth/sign-up.tsx",
      "parent": "/app"
    },
    "/app/_default/test/about": {
      "filePath": "app/_default/test/about.tsx",
      "parent": "/app/_default/test"
    },
    "/app/_default/tests/datasources": {
      "filePath": "app/_default/tests/datasources.tsx",
      "parent": "/app/_default/tests"
    },
    "/app/_default/tests/forms": {
      "filePath": "app/_default/tests/forms.tsx",
      "parent": "/app/_default/tests"
    },
    "/app/_default/tests/libs": {
      "filePath": "app/_default/tests/libs.tsx",
      "parent": "/app/_default/tests"
    },
    "/app/_default/tests/": {
      "filePath": "app/_default/tests/index.tsx",
      "parent": "/app/_default/tests"
    },
    "/app/_default/_auth/sign-in/sso-callback": {
      "filePath": "app/_default/_auth/sign-in.sso-callback.tsx",
      "parent": "/app/_default/_auth/sign-in"
    }
  }
}
ROUTE_MANIFEST_END */
